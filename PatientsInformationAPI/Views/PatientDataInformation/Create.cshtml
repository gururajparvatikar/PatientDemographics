@model PatientsInformationAPI.Models.PatientDataModel

@{
    //ViewBag.Title = "Create Patient";
}

<h2>Patient Demographics</h2>
<br />
<br />

<div class="form-group row">
    <label class="col-sm-2 col-form-label col-form-label-lg">Create Patient</label>
</div>
<br />

    @using (Html.BeginForm("create", null, FormMethod.Post, new { id = "Createform", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)

        <div class="form-group row">
            @Html.LabelFor(model => model.ForeName, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.ForeName, new { id = "foreNameTxt", @class = "form-control", @placeholder = "ForeName", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ForeName)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.SurName, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.SurName, new { id = "surNameTxt", @class = "form-control", @placeholder = "SurName", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.SurName)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.DateOfBirth, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.DateOfBirth, new { id = "fromdate1", @class = "form-control", @placeholder = "Date of birth", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.DateOfBirth)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Gender, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
                   { new SelectListItem{Text="Male", Value="Male"},
                     new SelectListItem{Text="Female", Value="Female"}}, "Please select",
                  new { id = "genderDDL", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.HomeNumber, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.HomeNumber, new { id = "homeNumbertxt", @class = "form-control", @placeholder = "Home Number", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.HomeNumber)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.WorkNumber, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.WorkNumber, new { id = "workNumbertxt", @class = "form-control", @placeholder = "Work Number", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.WorkNumber)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.MobileNumber, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.MobileNumber, new { id = "mobileNumbertxt", @class = "form-control", @placeholder = "Mobile Number", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.MobileNumber)
            </div>
        </div>

        <div class="form-group row">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info", @role = "button" })
            <input type="submit" value="Create" class="btn btn-primary" />
            <input type="reset" value="Reset" id="btnReset" class="btn btn-secondary" />
        </div>

    }


    @section Scripts {
        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <link href="~/Content/jquery-ui.css" rel="stylesheet" />
        <script>
            $(function () {
                //$('#btnReset').click(function () {
                //    $('#Createform')[0].reset();
                //    //if(confirm("Want to clear?")){
                //    //    /*Clear all input type="text" box*/
                //    //    $('#Createform input[type="text"]').val('');
                //    //    /*Clear textarea using id */
                //    //    //$('#form1 #txtAddress').val('');
                //    //}
                //});
            });

            //$("#fromdate1").datepicker({
            //    //numberOfMonths: 1,
            //    onSelect: function (selected) {
            //        var dt = new Date(selected.split("/").reverse().join("/"));//new Date(selected);
            //        dt.setDate(dt.getDate() + 0);                        
            //    },
            //    dateFormat: 'dd/mm/yy',
            //    endDate: '+0d',
            //    maxDate: 'today'
            //});            
        </script>
    }
